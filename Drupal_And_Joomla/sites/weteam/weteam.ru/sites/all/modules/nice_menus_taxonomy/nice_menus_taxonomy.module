<?php


/**
 * Nice menus based on Taxonomy settings
 */

function nice_menus_taxonomy_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'nice_menus_admin_settings') {

    $form['nice_menus_number']['#title'] = t('Number of Nice menus blocks');
    $form['nice_menus_number']['#weight'] = -2;

    $form['nice_menus_taxonomy_number'] = array(
      '#title' => t('Number of Nice menus based on Taxonomy blocks'),
      '#weight' => -1,
      '#type' => 'textfield',
      '#description' => t('The total number of independent Nice menus based on Taxonomy blocks you want. Enter a number between 0 and 99.'),
      '#default_value' => variable_get('nice_menus_taxonomy_number', '2'),
      '#size' => 2,
    );

    $form['#validate'][] = 'nice_menus_taxonomy_admin_settings_validate';
    $form['#submit'][] = 'nice_menus_taxonomy_admin_settings_submit';
  }
}


function nice_menus_taxonomy_admin_settings_validate($form, &$form_state) {
  $number = $form_state['values']['nice_menus_taxonomy_number'];
  if (!is_numeric($number) || strlen($number) > 2) {
      form_set_error('nice_menus_taxonomy_number', t('You must enter a number from 0 to 99.'));
  }
}


function nice_menus_taxonomy_admin_settings_submit($form, &$form_state) {
  variable_set('nice_menus_taxonomy_number', $form_state['values']['nice_menus_taxonomy_number']);
}


/**
 * Implementation of hook_block().
 */

function nice_menus_taxonomy_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {

    case 'list':
      for ($i = 1; $i <= variable_get('nice_menus_taxonomy_number', '2'); $i++) {
        $blocks[$i]['info'] = variable_get('nice_menus_taxonomy_name_'. $i, 'Nice Menu based on Taxonomy '. $i) .' (Nice Menu based on Taxonomy)';
        $blocks[$i]['cache'] = BLOCK_NO_CACHE;
      }
      return $blocks;

    case 'configure':
      $vocs = taxonomy_get_vocabularies();
      $vocs_arr = array();
      foreach ($vocs as $voc_obj) $vocs_arr[$voc_obj->vid] = $voc_obj->name;

      $form['nice_menus_taxonomy_name_'. $delta] = array(
        '#type' => 'textfield',
        '#title' => t('Menu Name'),
        '#default_value' => variable_get('nice_menus_taxonomy_name_'. $delta, 'Nice Menu based on Taxonomy '. $delta),
      );
      $form['nice_menus_taxonomy_vid_'. $delta] = array(
        '#type' => 'select',
        '#title' => t('Source Vocabulary'),
        '#description' => t('The vocabulary from which to show a nice menu.'),
        '#default_value' => variable_get('nice_menus_taxonomy_vid_'. $delta, NULL),
        '#options' => $vocs_arr,
      );
      $form['nice_menus_taxonomy_type_'. $delta] = array(
        '#type' => 'select',
        '#title' => t('Menu Style'),
        '#description' => t('right: menu items are listed on top of each other and expand to the right') .'<br />'. t('left: menu items are listed on top of each other and expand to the left') .'<br />'. t('down: menu items are listed side by side and expand down'),
        '#default_value' => variable_get('nice_menus_taxonomy_type_'. $delta, 'right'),
        '#options' => drupal_map_assoc(array('right', 'left', 'down')),
      );
      return $form;

    case 'save':
      variable_set('nice_menus_taxonomy_name_'. $delta, $edit['nice_menus_taxonomy_name_'. $delta]);
      variable_set('nice_menus_taxonomy_vid_'. $delta, $edit['nice_menus_taxonomy_vid_'. $delta]);
      variable_set('nice_menus_taxonomy_type_'. $delta, $edit['nice_menus_taxonomy_type_'. $delta]);
      break;

    case 'view':
      $vid = variable_get('nice_menus_taxonomy_vid_'. $delta, NULL);
      $block['content'] = false;
      if (is_numeric($vid)) {
        $direction = variable_get('nice_menus_taxonomy_type_'. $delta, 'right');
        if ($output = theme('nice_menus_taxonomy_build', $vid, $delta, $direction)) {
       /* $block['subject'] = '<span class="'. ($direction == 'down' ? 'nice-menu-hide-title' : 'nice-menu-show-title') .'">'. check_plain($subject) .'</span>'; */
          $block['content'] = $output;
        }
      }
      return $block;
  }
}


/**
 * Implmentation of hook_theme().
 */
 
function nice_menus_taxonomy_theme() {
  return array(
    'nice_menus_taxonomy_build' => array(
      'arguments' => array('vid' => NULL, 'delta' => NULL, 'direction' => 'right', 'terms' => NULL),
    ),
  );
}


/**
 * nice_menus_taxonomy core functions
 */

function theme_nice_menus_taxonomy_build($vid, $delta, $direction = 'right', $terms = NULL) {
  $terms = isset($terms) ? $terms : taxonomy_get_tree($vid);
  $menu = array();
  $menu_items = array();

  foreach ($terms as $term) {
    $parent_tid = $term->parents[0];
    $tid = $term->tid;
    $menu_item = array(
      'below' => '',
      'link'  => array(
        'title' => $term->name,
        'mlid' => 'tax-'. $tid,
        'href' => 'taxonomy/term/'. $tid,
        'hidden' => 0,
        'has_children' => taxonomy_get_children($tid) ? 1 : 0, /* need optimisation for better performance */
      ),
    );
    $menu_items[$tid]= $menu_item;
    if ($parent_tid) {
      $menu_items[$parent_tid]['below'][$tid] = &$menu_items[$tid];
    } else {
      $menu[$tid]= &$menu_items[$tid];
    }
  }

  if (count($menu)){
    return '<ul class="nice-menu nice-menu-'. $direction .'" id="nice-menu-tax-'. $delta .'">'. theme('nice_menu_build', $menu) ."</ul>\n";
  } else {
    return t('Data not presented');
  }
}
